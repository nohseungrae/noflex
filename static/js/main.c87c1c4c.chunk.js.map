{"version":3,"sources":["assets/noPosterSmall.jpg","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","HeaderList","ul","HeaderItem","li","props","current","ALink","Link","withRouter","pathname","location","console","log","to","Container","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","color","Message","text","Conatiner","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","popular","upComing","loading","error","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","name","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","BackDrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","includes","match","push","history","parseId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c87c1c4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.a43aaa9a.jpg\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: #fff;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst HeaderList = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst HeaderItem = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom : 3px solid ${props =>\r\n    props.current ? \"#3498db\" : \"transparent\"}\r\n  transition : border-bottom .5s ease-in-out\r\n  &:not(:last-child) {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nconst ALink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => {\r\n  return (\r\n    <Header>\r\n      {console.log(pathname)}\r\n      <HeaderList>\r\n        <HeaderItem current={pathname === \"/\"}>\r\n          <ALink to=\"/\">Movies</ALink>\r\n        </HeaderItem>\r\n        <HeaderItem current={pathname === \"/tv\"}>\r\n          <ALink to=\"/tv\">TV</ALink>\r\n        </HeaderItem>\r\n        <HeaderItem current={pathname === \"/search\"}>\r\n          <ALink to=\"/search\">Search</ALink>\r\n        </HeaderItem>\r\n      </HeaderList>\r\n    </Header>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  &:not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <Container>\r\n      <Title>{title}</Title>\r\n      <Grid>{children}</Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 30px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Container>\r\n      <span role=\"img\" aria-label=\"Loading\">\r\n        ⏰\r\n      </span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Message = ({ color, text }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Conatiner = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  background-size: cover;\r\n  height: 180px;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: 0.1s linear;\r\n`;\r\nconst Rating = styled.span`\r\n  position: relative;\r\n  top: -20px;\r\n  opacity: 0;\r\n  transition: 0.1s linear;\r\n`;\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Conatiner>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.jpg\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 15)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Conatiner>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upComing, loading, error }) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Movies | Noflex</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          {nowPlaying && nowPlaying.length > 0 && (\r\n            <Section\r\n              title=\"Now Playing\"\r\n              children={nowPlaying.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  }\r\n                  isMovie={true}\r\n                ></Poster>\r\n              ))}\r\n            ></Section>\r\n          )}\r\n          {upComing && upComing.length > 0 && (\r\n            <Section\r\n              title=\"Now upComing\"\r\n              children={upComing.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  }\r\n                  isMovie={true}\r\n                ></Poster>\r\n              ))}\r\n            ></Section>\r\n          )}\r\n          {popular && popular.length > 0 && (\r\n            <Section\r\n              title=\"Now Popular\"\r\n              children={popular.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  }\r\n                  isMovie={true}\r\n                ></Poster>\r\n              ))}\r\n            ></Section>\r\n          )}\r\n          {error && <Message color=\"#e74c3c\" text={error} />}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upComing: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"0d4e32f77bbeed2b8a43e9b720fc7782\",\r\n    language: \"ko-kr\"\r\n  }\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"/movie/now_playing\"),\r\n  upComing: () => api.get(\"/movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n// api.get(\"tv/popular\");\r\n// export default api;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upComing: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upComing }\r\n      } = await moviesApi.upComing();\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n\r\n      this.setState({\r\n        nowPlaying,\r\n        upComing,\r\n        popular\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setState({\r\n        error: \"Can't find movies information.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n    console.log(this.state);\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upComing={upComing}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>TV | Noflex</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          {topRated && topRated.length > 0 && (\r\n            <Section\r\n              title=\"TopRated\"\r\n              children={topRated.map(show => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={\r\n                    show.first_air_date && show.first_air_date.substring(0, 4)\r\n                  }\r\n                  isMovie={false}\r\n                ></Poster>\r\n              ))}\r\n            ></Section>\r\n          )}\r\n          {popular && popular.length > 0 && (\r\n            <Section\r\n              title=\"popular\"\r\n              children={popular.map(show => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={\r\n                    show.first_air_date && show.first_air_date.substring(0, 4)\r\n                  }\r\n                  isMovie={false}\r\n                ></Poster>\r\n              ))}\r\n            ></Section>\r\n          )}\r\n          {airingToday && airingToday.length > 0 && (\r\n            <Section\r\n              title=\"airingToday\"\r\n              children={airingToday.map(show => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={\r\n                    show.first_air_date && show.first_air_date.substring(0, 4)\r\n                  }\r\n                  isMovie={false}\r\n                ></Poster>\r\n              ))}\r\n            ></Section>\r\n          )}\r\n          {error && <Message color=\"#e74c3c\" text={error} />}\r\n        </Container>\r\n      )}\r\n      ;\r\n    </>\r\n  );\r\n};\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday\r\n      });\r\n    } catch (error) {\r\n      this.setState({ error: \"Can't find movies information.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  loading,\r\n  error,\r\n  handleSubmit,\r\n  updateTerm\r\n}) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Search | Noflex</title>\r\n      </Helmet>\r\n      <Container>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Input\r\n            placeholder=\"Search Movies or TV Shows...\"\r\n            name={Message(Text)}\r\n            value={searchTerm}\r\n            onChange={updateTerm}\r\n          />\r\n        </Form>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            {movieResults && movieResults.length > 0 && (\r\n              <Section\r\n                title=\"Movie Results\"\r\n                children={movieResults.map(movie => (\r\n                  <Poster\r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    imageUrl={movie.poster_path}\r\n                    title={movie.original_title}\r\n                    rating={movie.vote_average}\r\n                    year={\r\n                      movie.release_date && movie.release_date.substring(0, 4)\r\n                    }\r\n                    isMovie={true}\r\n                  ></Poster>\r\n                ))}\r\n              ></Section>\r\n            )}\r\n            {tvResults && tvResults.length > 0 && (\r\n              <Section\r\n                title=\"TV Show Results\"\r\n                children={tvResults.map(show => (\r\n                  <Poster\r\n                    key={show.id}\r\n                    id={show.id}\r\n                    imageUrl={show.poster_path}\r\n                    title={show.original_name}\r\n                    rating={show.vote_average}\r\n                    year={\r\n                      show.first_air_date && show.first_air_date.substring(0, 4)\r\n                    }\r\n                    isMovie={false}\r\n                  ></Poster>\r\n                ))}\r\n              ></Section>\r\n            )}\r\n          </>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message\r\n              text={`Nothing Found for ${searchTerm}`}\r\n              color=\"#95a5a6\"\r\n            ></Message>\r\n          )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\nimport Message from \"../../Components/Message\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      });\r\n    } catch (error) {\r\n      this.setState({ error: \"Can't find movies information.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n    console.log(this.state);\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport Message from \"../../Components/Message\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst BackDrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height : 100%\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 20px;\r\n`;\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\nconst Item = styled.span``;\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Noflex</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Noflex\r\n        </title>\r\n      </Helmet>\r\n      <BackDrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\r\n              : require(\"../../assets/noPosterSmall.jpg\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>·</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>·</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name}/`\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parseId = parseInt(id);\r\n    if (isNaN(parseId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parseId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parseId));\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: \"Can't fine anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    console.log(result);\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Home from \"../Routes/Home\";\r\nimport TV from \"../Routes/TV\";\r\nimport Search from \"../Routes/Search\";\r\nimport Detail from \"../Routes/Detail\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Router>\r\n      <>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/tv\" component={TV} />\r\n          <Route path=\"/search\" component={Search} />\r\n          <Route path=\"/movie/:id\" component={Detail} />\r\n          <Route path=\"/show/:id\" component={Detail} />\r\n          <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n      </>\r\n    </Router>\r\n  );\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration : none;\r\n        color : inherit\r\n    }\r\n    * {\r\n        box-sizing : border-box;\r\n    }\r\n    body {\r\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n        Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n        font-size: 14px;\r\n        background-color: rgba(20, 20, 20, 1);\r\n        color : white;\r\n        padding-top : 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"../Components/Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles></GlobalStyles>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}